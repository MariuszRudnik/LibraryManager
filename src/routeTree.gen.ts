/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfilImport } from './routes/profil'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as RegisterIndexImport } from './routes/register/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as ProfilUserStatisticsImport } from './routes/profil/userStatistics'
import { Route as ProfilUserSettingsImport } from './routes/profil/userSettings'
import { Route as ProfilMyBorrowedBooksImport } from './routes/profil/myBorrowedBooks'
import { Route as DashboardBorrowedBooksImport } from './routes/dashboard/borrowed-books'
import { Route as DashboardBooksImport } from './routes/dashboard/books'
import { Route as DashboardLogSystemImport } from './routes/dashboard/LogSystem'
import { Route as BookBookImport } from './routes/book/$book'
import { Route as DashboardBooksAddImport } from './routes/dashboard/books.add'
import { Route as DashboardBooksEditIdImport } from './routes/dashboard/books.edit.$id'

// Create/Update Routes

const ProfilRoute = ProfilImport.update({
  id: '/profil',
  path: '/profil',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterIndexRoute = RegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const ProfilUserStatisticsRoute = ProfilUserStatisticsImport.update({
  id: '/userStatistics',
  path: '/userStatistics',
  getParentRoute: () => ProfilRoute,
} as any)

const ProfilUserSettingsRoute = ProfilUserSettingsImport.update({
  id: '/userSettings',
  path: '/userSettings',
  getParentRoute: () => ProfilRoute,
} as any)

const ProfilMyBorrowedBooksRoute = ProfilMyBorrowedBooksImport.update({
  id: '/myBorrowedBooks',
  path: '/myBorrowedBooks',
  getParentRoute: () => ProfilRoute,
} as any)

const DashboardBorrowedBooksRoute = DashboardBorrowedBooksImport.update({
  id: '/borrowed-books',
  path: '/borrowed-books',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardBooksRoute = DashboardBooksImport.update({
  id: '/books',
  path: '/books',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardLogSystemRoute = DashboardLogSystemImport.update({
  id: '/LogSystem',
  path: '/LogSystem',
  getParentRoute: () => DashboardRoute,
} as any)

const BookBookRoute = BookBookImport.update({
  id: '/book/$book',
  path: '/book/$book',
  getParentRoute: () => rootRoute,
} as any)

const DashboardBooksAddRoute = DashboardBooksAddImport.update({
  id: '/add',
  path: '/add',
  getParentRoute: () => DashboardBooksRoute,
} as any)

const DashboardBooksEditIdRoute = DashboardBooksEditIdImport.update({
  id: '/edit/$id',
  path: '/edit/$id',
  getParentRoute: () => DashboardBooksRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/profil': {
      id: '/profil'
      path: '/profil'
      fullPath: '/profil'
      preLoaderRoute: typeof ProfilImport
      parentRoute: typeof rootRoute
    }
    '/book/$book': {
      id: '/book/$book'
      path: '/book/$book'
      fullPath: '/book/$book'
      preLoaderRoute: typeof BookBookImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/LogSystem': {
      id: '/dashboard/LogSystem'
      path: '/LogSystem'
      fullPath: '/dashboard/LogSystem'
      preLoaderRoute: typeof DashboardLogSystemImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/books': {
      id: '/dashboard/books'
      path: '/books'
      fullPath: '/dashboard/books'
      preLoaderRoute: typeof DashboardBooksImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/borrowed-books': {
      id: '/dashboard/borrowed-books'
      path: '/borrowed-books'
      fullPath: '/dashboard/borrowed-books'
      preLoaderRoute: typeof DashboardBorrowedBooksImport
      parentRoute: typeof DashboardImport
    }
    '/profil/myBorrowedBooks': {
      id: '/profil/myBorrowedBooks'
      path: '/myBorrowedBooks'
      fullPath: '/profil/myBorrowedBooks'
      preLoaderRoute: typeof ProfilMyBorrowedBooksImport
      parentRoute: typeof ProfilImport
    }
    '/profil/userSettings': {
      id: '/profil/userSettings'
      path: '/userSettings'
      fullPath: '/profil/userSettings'
      preLoaderRoute: typeof ProfilUserSettingsImport
      parentRoute: typeof ProfilImport
    }
    '/profil/userStatistics': {
      id: '/profil/userStatistics'
      path: '/userStatistics'
      fullPath: '/profil/userStatistics'
      preLoaderRoute: typeof ProfilUserStatisticsImport
      parentRoute: typeof ProfilImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/books/add': {
      id: '/dashboard/books/add'
      path: '/add'
      fullPath: '/dashboard/books/add'
      preLoaderRoute: typeof DashboardBooksAddImport
      parentRoute: typeof DashboardBooksImport
    }
    '/dashboard/books/edit/$id': {
      id: '/dashboard/books/edit/$id'
      path: '/edit/$id'
      fullPath: '/dashboard/books/edit/$id'
      preLoaderRoute: typeof DashboardBooksEditIdImport
      parentRoute: typeof DashboardBooksImport
    }
  }
}

// Create and export the route tree

interface DashboardBooksRouteChildren {
  DashboardBooksAddRoute: typeof DashboardBooksAddRoute
  DashboardBooksEditIdRoute: typeof DashboardBooksEditIdRoute
}

const DashboardBooksRouteChildren: DashboardBooksRouteChildren = {
  DashboardBooksAddRoute: DashboardBooksAddRoute,
  DashboardBooksEditIdRoute: DashboardBooksEditIdRoute,
}

const DashboardBooksRouteWithChildren = DashboardBooksRoute._addFileChildren(
  DashboardBooksRouteChildren,
)

interface DashboardRouteChildren {
  DashboardLogSystemRoute: typeof DashboardLogSystemRoute
  DashboardBooksRoute: typeof DashboardBooksRouteWithChildren
  DashboardBorrowedBooksRoute: typeof DashboardBorrowedBooksRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardLogSystemRoute: DashboardLogSystemRoute,
  DashboardBooksRoute: DashboardBooksRouteWithChildren,
  DashboardBorrowedBooksRoute: DashboardBorrowedBooksRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

interface ProfilRouteChildren {
  ProfilMyBorrowedBooksRoute: typeof ProfilMyBorrowedBooksRoute
  ProfilUserSettingsRoute: typeof ProfilUserSettingsRoute
  ProfilUserStatisticsRoute: typeof ProfilUserStatisticsRoute
}

const ProfilRouteChildren: ProfilRouteChildren = {
  ProfilMyBorrowedBooksRoute: ProfilMyBorrowedBooksRoute,
  ProfilUserSettingsRoute: ProfilUserSettingsRoute,
  ProfilUserStatisticsRoute: ProfilUserStatisticsRoute,
}

const ProfilRouteWithChildren =
  ProfilRoute._addFileChildren(ProfilRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/profil': typeof ProfilRouteWithChildren
  '/book/$book': typeof BookBookRoute
  '/dashboard/LogSystem': typeof DashboardLogSystemRoute
  '/dashboard/books': typeof DashboardBooksRouteWithChildren
  '/dashboard/borrowed-books': typeof DashboardBorrowedBooksRoute
  '/profil/myBorrowedBooks': typeof ProfilMyBorrowedBooksRoute
  '/profil/userSettings': typeof ProfilUserSettingsRoute
  '/profil/userStatistics': typeof ProfilUserStatisticsRoute
  '/login': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
  '/dashboard/books/add': typeof DashboardBooksAddRoute
  '/dashboard/books/edit/$id': typeof DashboardBooksEditIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/profil': typeof ProfilRouteWithChildren
  '/book/$book': typeof BookBookRoute
  '/dashboard/LogSystem': typeof DashboardLogSystemRoute
  '/dashboard/books': typeof DashboardBooksRouteWithChildren
  '/dashboard/borrowed-books': typeof DashboardBorrowedBooksRoute
  '/profil/myBorrowedBooks': typeof ProfilMyBorrowedBooksRoute
  '/profil/userSettings': typeof ProfilUserSettingsRoute
  '/profil/userStatistics': typeof ProfilUserStatisticsRoute
  '/login': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
  '/dashboard/books/add': typeof DashboardBooksAddRoute
  '/dashboard/books/edit/$id': typeof DashboardBooksEditIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/profil': typeof ProfilRouteWithChildren
  '/book/$book': typeof BookBookRoute
  '/dashboard/LogSystem': typeof DashboardLogSystemRoute
  '/dashboard/books': typeof DashboardBooksRouteWithChildren
  '/dashboard/borrowed-books': typeof DashboardBorrowedBooksRoute
  '/profil/myBorrowedBooks': typeof ProfilMyBorrowedBooksRoute
  '/profil/userSettings': typeof ProfilUserSettingsRoute
  '/profil/userStatistics': typeof ProfilUserStatisticsRoute
  '/login/': typeof LoginIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/dashboard/books/add': typeof DashboardBooksAddRoute
  '/dashboard/books/edit/$id': typeof DashboardBooksEditIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/profil'
    | '/book/$book'
    | '/dashboard/LogSystem'
    | '/dashboard/books'
    | '/dashboard/borrowed-books'
    | '/profil/myBorrowedBooks'
    | '/profil/userSettings'
    | '/profil/userStatistics'
    | '/login'
    | '/register'
    | '/dashboard/books/add'
    | '/dashboard/books/edit/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/profil'
    | '/book/$book'
    | '/dashboard/LogSystem'
    | '/dashboard/books'
    | '/dashboard/borrowed-books'
    | '/profil/myBorrowedBooks'
    | '/profil/userSettings'
    | '/profil/userStatistics'
    | '/login'
    | '/register'
    | '/dashboard/books/add'
    | '/dashboard/books/edit/$id'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/profil'
    | '/book/$book'
    | '/dashboard/LogSystem'
    | '/dashboard/books'
    | '/dashboard/borrowed-books'
    | '/profil/myBorrowedBooks'
    | '/profil/userSettings'
    | '/profil/userStatistics'
    | '/login/'
    | '/register/'
    | '/dashboard/books/add'
    | '/dashboard/books/edit/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  ProfilRoute: typeof ProfilRouteWithChildren
  BookBookRoute: typeof BookBookRoute
  LoginIndexRoute: typeof LoginIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  ProfilRoute: ProfilRouteWithChildren,
  BookBookRoute: BookBookRoute,
  LoginIndexRoute: LoginIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/profil",
        "/book/$book",
        "/login/",
        "/register/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/LogSystem",
        "/dashboard/books",
        "/dashboard/borrowed-books"
      ]
    },
    "/profil": {
      "filePath": "profil.tsx",
      "children": [
        "/profil/myBorrowedBooks",
        "/profil/userSettings",
        "/profil/userStatistics"
      ]
    },
    "/book/$book": {
      "filePath": "book/$book.tsx"
    },
    "/dashboard/LogSystem": {
      "filePath": "dashboard/LogSystem.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/books": {
      "filePath": "dashboard/books.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/books/add",
        "/dashboard/books/edit/$id"
      ]
    },
    "/dashboard/borrowed-books": {
      "filePath": "dashboard/borrowed-books.tsx",
      "parent": "/dashboard"
    },
    "/profil/myBorrowedBooks": {
      "filePath": "profil/myBorrowedBooks.tsx",
      "parent": "/profil"
    },
    "/profil/userSettings": {
      "filePath": "profil/userSettings.tsx",
      "parent": "/profil"
    },
    "/profil/userStatistics": {
      "filePath": "profil/userStatistics.tsx",
      "parent": "/profil"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/register/": {
      "filePath": "register/index.tsx"
    },
    "/dashboard/books/add": {
      "filePath": "dashboard/books.add.tsx",
      "parent": "/dashboard/books"
    },
    "/dashboard/books/edit/$id": {
      "filePath": "dashboard/books.edit.$id.tsx",
      "parent": "/dashboard/books"
    }
  }
}
ROUTE_MANIFEST_END */
